{
  "name": "to-utf8",
  "version": "0.0.2",
  "description": "single-function form of node's Buffer.toString(utf8)",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/to-utf8.git"
  },
  "keywords": [
    "utf8",
    "buffer"
  ],
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "license": "MIT",
  "devDependencies": {
    "tape": "~0.2.2",
    "convert-buffer": "0.0.2"
  },
  "testling": {
    "files": "test.js",
    "browsers": {
      "ie": [
        10
      ],
      "firefox": [
        13,
        14,
        15,
        16,
        17
      ],
      "chrome": [
        20,
        21,
        22,
        23,
        "canary"
      ],
      "safari": [
        6
      ]
    }
  },
  "readme": "# to-utf8\n\ngiven an integer-indexable input iterable, produce a utf8 string.\n\n[![Build Status](https://travis-ci.org/chrisdickinson/to-utf8.png)](https://travis-ci.org/chrisdickinson/to-utf8)\n[![browser support](http://ci.testling.com/chrisdickinson/to-utf8.png)](http://ci.testling.com/chrisdickinson/to-utf8)\n\n```javascript\n  var utf8 = require('to-utf8')\n\n  var buf = new Buffer('淾淾淾 hello world 淾淾 yep ƒuu 淾', 'utf8')\n  assert.equal(utf8(buf), buf.toString('utf8'))\n```\n\n## api\n\n#### utf8(iterable[, byteStart][, byteEnd]) -> string\n\ntake an iterable of bytes (`0...0xFF`) and produce an utf8 string.\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/chrisdickinson/to-utf8/issues"
  },
  "_id": "to-utf8@0.0.2",
  "dist": {
    "shasum": "9a59e928d7b5cb8570cffb58a28e07f449b74337"
  },
  "_from": "to-utf8@~0.0.1",
  "_resolved": "https://registry.npmjs.org/to-utf8/-/to-utf8-0.0.2.tgz"
}
